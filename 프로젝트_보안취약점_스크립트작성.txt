필요 개념
 윈도우 cmd , powershell
 리눅스 bash sh zsh 

쉘에 한줄씩 명령어 보내어 점검해도된다, 당신이 시간이 넘친다면! 
귀찮으므로 스크립트(파일)에 명령어를 담아서 한번에 실행되게 해주는 파일들을 shell script, batch file 이라고한다
리눅스         윈도우   
shell script = batch file(텍스트파일)

배치파일 종류
.bat  : cmd.exe or command.com(비추) 으로 실행
.vbs : cscript.exe or wscript.exe
.js : cscript.exe or wscript.exe
.ps1 : powershell.exe

환경변수
cmd켜고 set      : 윈도우os로 부터 받은 환경변수리스트 뜬다 / 
cmd켜고 set A=B    : A라는 변수에 B값이 설정된다   / 추가된 환경변수들의 영향권은 현재cmd창 이다. 창끄면 변수는 undefined 상태가 된다. / 따라서 cmd에서 배치파일을 구동하면 배치파일로 인해 추가된 변수들은 배치파일이 끝나도 그 cmd에서 유효하다.
                           지역변수 개념으로, 일부영역에서만 특정 환경변수의 정의를 유효화 하고싶다면, 

                           setlocal
 			배치파일내용
		   endlocal

구문을 사용하면된다.


.BAT 파일의 문법과 예제

ECHO  // 배치파일의 내용을 한 줄씩 출력한다
   echo on : 이 라인 다음부터 echo-on 상태(줄 내용 보여줌)
   echo off : 이 라인 다음부터 echo-off 상태
   echo 문장 : 문장을 바로 출력
   echo.      : empty line 출력
   echo %endefined1%    :   만일 endefined1 라는 변수가 지정되지 않았다면 화면에 echo가 정의되어있지 않습니다. 출력됨
   @ : 해당라인 명령어를 숨김, 출력만 보여줌


:LABEL  // TOGO 하고 함께 쓴다는데, 아직 모르겠음

%숫자  //  인자들을 배치파일 내에서 사용할때 사용, %0, %1, %2 첫번째 두번째 세번째 인자, %0은 파일이름을 받음
SHIFT  //  사용법: shift /n (n은 숫자)  해당 숫자 왼쪽은 그대로이며, 오른쪽은 왼쪽으로 1칸씩 당겨온다 / 더 간단히 모든 인자를 컨트롤 하는방법이 있다고한다

조건실행
	& : command1 & command2   : 1번 끝나고 2번 실행
	&& : command1 && command2  : 1번이 성공적으로 끝나고 2번 실행
	||  : command1 || command2  : 1번이 실패로 끝나고 2번 실행

CALL : 배치파일내에서 다른 배치파일을 호출할때 사용
SET : 현재설정된 환경변수 출력 
SET variable : 현재 설정된 variable의 값을 보여준다. (variable=설정값 형태)
SET variable=string (변수에 문자열값 입력)  // set var1=var2 할때 var2가 undefined면 var1도 undefined 됨 / set var3=   라고하면 var3은 undefined

SET /A variable=numerical expression   //     set /a temvar1=7+3    하고   echo %temvar1% 하면 10 출력

SET /P variable=variable=[promptString] //   사용자가 값을 입력할 것을 요구하고, 입력된 값은 variable로 들어간다     /      set /p tempvar1=  하면 밑에 커서 뜨고 3+7 엔터하면 값이 계산안된채로 들어감 / 그 후 set /a tempvar2=%tempvar1% 하면 10이 계산되어 들어감. 그 후 



if문

if exsist %windir%syswow64 echo 64bit 명령어
if not string1==string2 명령어
if string1==string2 명령어
ex) set A=snoopy 
if %A%==snoopy echo %A%는 snoopy와 같습니다   

// set B=snoopybox 
if %B%==snoopy echo %B%는 snoopy와 같습니다

A는 출력되고 B는 출력되지 않음.

IF 뒤에 띄어서 /i 를 입력하면 대소문자를 구분하지 않는다

자주쓰는 연산 비교문자
ex) if 5 equ 5 echo 5는 5와 같습니다.

EQU 같다
NEQ 안같다
LSS 미만
LEQ 이하
GTR 초과
GEQ 이상


if errorlevel  구문의 종료코드가 무엇인지 조건을 따짐 (0 : 정상  , 1이상 : 비정상)
ex) if errorlevel 1 이것의 의미는 종료코드가 1보다 크면 참.

ren string1 string2   // 1이름을 2로 변경

else구문 
if 조건문 (참 ) else (거짓 )



exit  : cmd.exe종료   ( exit /b 하면 배치파일만 종료)



주석넣을때
REM( : , :: 이것도 가능) comments
rem 이것은 배치 파일에 설명문을
rem 붙이는 간단한 예제입니다.

del  : 지정파일삭제
del 파일이름(파일삭제) /  del 디렉토리이름 (디렉토리 내부의 모든 파일삭제)


redirection  0 , 1 , 2 
기본값 	입력(키보드) 정상출력(화면) 에러출력(화면)

command1 > filename  명령어 결과를 파일에 출력
command1 < filename 파일내용을 명령어 입력값으로 사용
command1 < infile > outfile    inflie로 명령어 입력을 받고 outfile에 출력
command1 2> file   명령어의 에러출력을 file에 표현
command1 > file 2>&1  명령어 출력 파일에 넣고 , 에러출력을 출력으로 보냄.( 결론 : 파일에 정상,에러출력 둘다 넣음)
command1 > nul 버림  (nul 오타 아님, null 아님)
command1 | command2  1번의 출력을 2번의 입력으로 보낸다.
command1  2>&1 | command2      1번의 출력,에러출력을 2번의 입력에 보낸다.



만드는 법(쉘스크립트)
vi로 파일을 열어서

#!/bin/sh
echo 'start training'
python train.py

저장은 .sh  

(윈도우)
실행할 명령어를 순차적으로 입력 후 .bat으로 저장하면 끝
@echo off
echo 안녕뉴비들아  (한글깨지면 UTF-8 말고 ANSI로 형식변경)





github 쓰는법좀 알아야겠다
github 계정생성 완료
원격에 WinBat repository 생성완료
(처음설치하면, 절차가 더있음)
로컬에 boan 폴더 생성완료 그 밑에 WinBat 폴더 생성됨
- cmd창에 boan 작업폴더로 이동 
- cmd창에 git clone https://github.com/grandmarine/WinBat.git 입력
WinBat폴더에 accounts.txt(작업할 것 생성)

git add (작업파일)
git log
git commit -m 내용
git push
업로드 확인



built-in 계정 
윈도우 설치하면 생기는 계정 (administrator, guest가 대표적)
LUSRMGR.MSC 로컬 사용자 및 그룹 창

